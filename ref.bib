
@misc{wiki:computer_vision,
	title = {Computer vision},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=Computer_vision&oldid=939131357},
	abstract = {Computer vision is an interdisciplinary scientific field that deals with how computers can be made to gain high-level understanding from digital images or videos. From the perspective of engineering, it seeks to automate tasks that the human visual system can do.Computer vision tasks include methods for acquiring, processing, analyzing and understanding digital images, and extraction of high-dimensional data from the real world in order to produce numerical or symbolic information, e.g. in the forms of decisions. Understanding in this context means the transformation of visual images (the input of the retina) into descriptions of the world that can interface with other thought processes and elicit appropriate action. This image understanding can be seen as the disentangling of symbolic information from image data using models constructed with the aid of geometry, physics, statistics, and learning theory.The scientific discipline of computer vision is concerned with the theory behind artificial systems that extract information from images. The image data can take many forms, such as video sequences, views from multiple cameras, or multi-dimensional data from a medical scanner. The technological discipline of computer vision seeks to apply its theories and models to the construction of computer vision systems.
Sub-domains of computer vision include scene reconstruction, event detection, video tracking, object recognition, 3D pose estimation, learning, indexing, motion estimation, and image restoration.},
	language = {en},
	urldate = {2020-02-23},
	journal = {Wikipedia},
	month = feb,
	year = {2020},
	note = {Page Version ID: 939131357},
	file = {Snapshot:/home/rand/Zotero/storage/YHPBWXJK/index.html:text/html}
}

@misc{snakes_icbe,
	address = {ICBE, University of Manchester},
	title = {snakes},
	url = {https://web.archive.org/web/20110716113957/http://www.isbe.man.ac.uk/courses/Computer_Vision/downloads/L11_Snakes.pdf},
	urldate = {2020-02-23},
	month = jul,
	year = {2011},
	file = {PDF Snapshot:/home/rand/Zotero/storage/659PGALR/2011 - Wayback Machine.pdf:application/pdf}
}

@misc{wiki:snakes,
	title = {Active contour model},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=Active_contour_model&oldid=940601399},
	abstract = {Active contour model, also called snakes, is a framework in computer vision introduced by Michael Kass, Andrew Witkin and Demetri Terzopoulos  for delineating an object outline from a possibly noisy 2D image. The snakes model is popular in computer vision, and snakes are widely used in applications like object tracking, shape recognition, segmentation, edge detection and stereo matching.
A snake is an energy minimizing, deformable spline influenced by constraint and image forces that pull it towards object contours and internal forces that resist deformation. Snakes may be understood as a special case of the general technique of matching a deformable model to an image by means of energy minimization. In two dimensions, the active shape model represents a discrete version of this approach, taking advantage of the point distribution model to restrict the shape range to an explicit domain learnt from a training set.

Snakes do not solve the entire problem of finding contours in images, since the method requires knowledge of the desired contour shape beforehand. Rather, they depend on other mechanisms such as interaction with a user, interaction with some higher level image understanding process, or information from image data adjacent in time or space.},
	language = {en},
	urldate = {2020-02-23},
	journal = {Wikipedia},
	month = feb,
	year = {2020},
	note = {Page Version ID: 940601399},
	file = {Snapshot:/home/rand/Zotero/storage/HH86N4W7/index.html:text/html}
}

@article{gpeyre,
	title = {The {Numerical} {Tours} of {Signal} {Processing} - {Advanced} {Computational} {Signal} and {Image} {Processing}},
	volume = {13},
	url = {https://hal.archives-ouvertes.fr/hal-00519521},
	abstract = {The Numerical Tours of Signal Processing is an online collection of tutorials to learn advanced computational signal and image processing. These tours allow one to follow a step by step Matlab or Scilab implementation of many important processing algorithms. This implementation is commented and the connexions with the relevant mathematical notions are exposed. These algorithms are applied to various signal, image, movie and 3D mesh datasets. These tours are suitable for practitioners in the field, that can use them to learn about state of the art methods. They are also designed to help undergraduate students to understand recent theoretical or numerical advances in signal and image processing.},
	number = {4},
	urldate = {2020-02-23},
	journal = {IEEE Computing in Science and Engineering},
	author = {Peyré, Gabriel},
	year = {2011},
	keywords = {computational education, image processing, Matlab, mesh processing, reproducible re- search, Scilab, Signal processing},
	pages = {94--97},
	file = {HAL PDF Full Text:/home/rand/Zotero/storage/VVAQJBXN/Peyré - 2011 - The Numerical Tours of Signal Processing - Advance.pdf:application/pdf}
}

@misc{closed_curve,
	type = {Text},
	title = {Closed {Curve}},
	copyright = {Copyright 1999-2020 Wolfram Research, Inc.  See http://mathworld.wolfram.com/about/terms.html for a full terms of use statement.},
	url = {http://mathworld.wolfram.com/ClosedCurve.html},
	abstract = {In the plane, a closed curve is a curve with no endpoints and which completely encloses an area.},
	language = {en},
	urldate = {2020-02-23},
	author = {Weisstein, Eric W.},
	file = {Snapshot:/home/rand/Zotero/storage/RQPY5D69/ClosedCurve.html:text/html}
}

@phdthesis{hopf_lax,
	title = {A {Hopf}-{Lax} formulation of the eikonal equation for parallel redistancing and oblique projection},
	url = {https://escholarship.org/uc/item/04f9942g},
	abstract = {The level set method is one of the most useful algorithms for scientific computing problems that require computations over complex geometric domains. By representing geometry in terms of implicit functions defined over regular Cartesian grids, level set methods automatically capture a wide range of dynamic shapes and topology changes. They have gained wide adoption for problems in fluid dynamics, image processing, chip manufacturing, combustion, computer animation and many more. Dynamic changes in the geometry are automatically resolved by advecting the implicit function throughout a flow domain. However, it is typically necessary for the function describing the level set to have some important properties that the advection process does not preserve. One such property is that the gradient of the implicit function should have unit norm. Given this requirement, much research has been done on replacing an implicit function with a new function that preserves the old zero isocontour while satisfying the unit norm gradient constraint. This process is called redistancing and its solution satisfies the eikonal equation.Many methods currently exist to solve this problem. Fast marching and fast sweeping are the most popular redistancing methods due to their efficiency and relative simplicity. However, these methods require propagation of information from the zero-isocontour outwards, and this data dependence complicates efficient implementation on today's multiprocessor hardware. Recently an interesting alternative view has been developed that utilizes the Hopf-Lax formulation of the solution to the eikonal equation. In this approach, the signed distance at an arbitrary point is obtained without the need of distance information from neighboring points. We extend the work of Lee et al. to redistance functions defined via interpolation over a regular grid. The grid-based definition is essential for practical application in level set methods. We demonstrate the effectiveness of our approach with GPU parallelism on a number of representative examples.In addition, we show how our method can be modified to solve the problem of oblique projection. This problem arises in the simulation of elastoplastic materials. An elastoplastic material has a region of allowed (or feasible) stress, and during simulation the stresses can leave the region. A projection is necessary to return the stress back to the feasible region. As we will show, this projection is not always a right angle projection. The shape of the allowed stress region changes depending on the material being simulated. While some closed form solutions exist for determining the projection, in general this problem is difficult. We provide a parallel solution for finding the oblique projection needed for an arbitrary region of allowed stress that generalizes the Hopf-Lax approach to redistancing.},
	language = {en},
	urldate = {2020-03-02},
	school = {UCLA},
	author = {Royston, Michael Wayne},
	year = {2017},
	file = {Full Text PDF:/home/rand/Zotero/storage/62K9UFGK/Royston - 2017 - A Hopf-Lax formulation of the eikonal equation for.pdf:application/pdf;Snapshot:/home/rand/Zotero/storage/D6CY5KAL/04f9942g.html:text/html}
}